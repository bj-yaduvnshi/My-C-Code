
#include <bits/stdc++.h>
using namespace std;    

struct node{

    int key;
    node *left;
    node *right;
    node(int k)
    {
        key=k;
        left=right=NULL;
    }
};
void inorder(node *root)
{
    if(root!=NULL)
    {
        inorder(root->left);
        cout<<root->key<<" ";
        inorder(root->right);
    }
}
void preorder(node *root)
{
    if(root!=NULL)
    {
        cout<<root->key<<" ";
        preorder(root->left);
        preorder(root->right);
    }
}
void postorder(node *root)
{
     if(root!=NULL)
    {

        postorder(root->left);
        postorder(root->right);
                cout<<root->key<<" ";
    }
}
int getsize(node *root)
{
    if(root==NULL)
    return 0;
    else
    return 1+getsize(root->left)+getsize(root->right);
}
int getmax(node *root)
{
    if(root==NULL)
    return 0;
    else
    return max(root->key,max(getmax(root->left),getmax(root->right)));
}
int height(node *root)
{
    if(root==NULL)
    return 0;
    else
    return 1+max(height(root->left),height(root->right));
}
    
int main() {
    node *root=new node(32);
    root->left=new node(21);
    root->right=new node(58);
    root->left->left=new node(67);
    inorder(root);
        cout<<"\n"; // Improvement
    preorder(root);
         cout<<"\n";
   postorder(root);
            cout<<"\n";
        cout<<getsize(root);
            cout<<"\n"; // Improvement
        cout<<getmax(root);
        cout<<"\n"; // Improvement
        cout<<height(root);
   
    return 0;
}